automation:
  - id: "garbage_day_is_today_reminder"
    alias: "Garbage Day Is Today Reminder"
    mode: "single"
    initial_state: off
    trigger:
      # At 6:30am
      - platform: time
        at: "06:30:00"
      # Kitchen's been occupied for 30 minutes
      - platform: state
        entity_id: binary_sensor.kitchen_motion_sensor_occupancy
        to: "on"
        for:
          minutes: 30
      # # House has been in auto mode for 15 minutes
      # - platform: state
      #   entity_id: input_select.house
      #   to: "Auto"
      #   for:
      #     minutes: 15
    condition:
      # House is occupied
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"
      # Garbage day boolean is on
      - condition: state
        entity_id: input_bolean.garbage_day
        state: "on"
      # After 6am
      - condition: time
        after: "06:00:00"
    action:
      # Kitchen has been occupied for more than 30 minutes
      - wait_template: "{{ (as_timestamp(now()) - as_timestamp(states.binary_sensor.kitchen_motion_sensor_occupancy.last_changed)) | int >= 1800 }}"
        timeout: "00:30:00"
        continue_on_timeout: false

      # Wait for motion in the kitchen
      - wait_template: "{{ is_state('binary_sensor.kitchen_motion_sensor_status', 'on') }}"
        timeout: "00:15:00"
        continue_on_timeout: false

      - alias: "Wait 2 seconds"
        delay: 2

      # Call the announcement engine
      - service: script.general_announcement
        data:
          speech_message: >-
            {{
              [
                "Hey there, today is garbage day, make sure the trash it out.",
                "Garbage day! Don't forget to take the trash out."
              ] | random
            }}
          media_players: "auto"
          sound: "flute-cell-phone-alert"

      # Notify via push
      - service: notify.mobile_app_jk
        data:
          message: "Today is garbage day"
          title: "Garbage Day"
