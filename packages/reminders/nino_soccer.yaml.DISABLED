# #  track bin days based on Google Calendar entries and perform reminders

# # input_boolean:
# #   bin_reminder:
# #     name: Bin Reminder
# #     icon: mdi:delete-outline
# #     initial: on

# # #  https://community.home-assistant.io/t/need-template-assistance-please/80237/7

# sensor:
#   - platform: template
#     sensors:
#       nino_soccer:
#         friendly_name: Nino soccer tomorrow
#         value_template: >
#           {% set e = strptime(states.calendar.ninos_soccer.attributes.start_time, '%Y-%m-%d %H:%M:%S') %}
#           {{ e.strftime('%j')|int - now().strftime('%j')|int == 1 and now().hour >= 12 }}

#   - platform: template
#     sensors:
#       nino_italian_class:
#         friendly_name: Nino Italian class tomorrow
#         value_template: >
#           {% set e = strptime(states.calendar.ninos_italian_class.attributes.start_time, '%Y-%m-%d %H:%M:%S') %}
#           {{ e.strftime('%j')|int - now().strftime('%j')|int == 1 and now().hour >= 12 }}

# automation:
#   - alias: Nino's soccer reminder
#     initial_state: "on"
#     trigger:
#       - platform: state
#         entity_id: nino_soccer
#         to: "True"
#     action:
#       # if people home:
#       # - remind via tts around 9am
#       # - when kitchen is occupied?
#       #
#       # if nobody home:
#       # - wait?
# # automation:
# #   - alias: Bin Reminder TTS
# #     initial_state: 'on'
# #     trigger:
# #       - platform: state
# #         entity_id: sensor.recycling_bin_tomorrow
# #         to: 'True'
# #       - platform: state
# #         entity_id: sensor.green_waste_bin_tomorrow
# #         to: 'True'
# #       - platform: state
# #         entity_id: sensor.recycling_bin_today
# #         to: 'True'
# #       - platform: state
# #         entity_id: sensor.green_waste_bin_today
# #         to: 'True'
# #     condition:
# #       - condition: state
# #         entity_id: input_boolean.bin_reminder
# #         state: 'on'
# #     action:
# #       - wait_template: "{{ is_state('binary_sensor.kitchen_multi_sensor_sensor', 'on') }}"
# #         timeout: '10:00:00'
# #         continue_on_timeout: 'false'
# #       - wait_template: "{{ is_state('media_player.googlehome3019', 'off' or 'idle') }}"
# #       - service: tts.google_say
# #         entity_id: media_player.googlehome3019
# #         data_template:
# #           message: "Dont forget you need to put out the {{ trigger.to_state.attributes.friendly_name }}"
