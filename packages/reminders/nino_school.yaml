binary_sensor:
  - platform: tod
    name: Nino School Hours
    after: "09:00"
    before: "13:15"

  - platform: workday
    country: US
    name: "Nino School Days"
    excludes: [fri]
# Is it a school day?
# is nino at school?
# Notify to get ready
# Notify to leave
# Notify to pick up

automation:
  # Turn on the automations if it's a school day
  #
  - id: "nino_school_day_automations_on"
    alias: "Nino School Day Automations On"
    initial_state: off
    mode: "single"
    trigger:
      # School day sensor turns on
      - platform: state
        entity_id: binary_sensor.nino_school_days
        to: "on"
      # Hassio restart/relaod
      - platform: homeassistant
        event: start
      - platform: event
        event_type: automation_reloaded
    condition:
      - condition: state
        entity_id: binary_sensor.nino_school_days
        state: "on"
    action:
      - service: automation.turn_on
        entity_id: automation.nino_school_day_reminder
      - service: automation.turn_on
        entity_id: automation.nino_school_departure_reminder
      - service: automation.turn_on
        entity_id: automation.nino_school_pickup_reminder

  # Turn off the automations if it's NOT a school day
  #
  - id: "nino_school_day_automations_off"
    alias: "Nino School Day Automations Off"
    mode: "single"
    initial_state: off
    trigger:
      # School day sensor turns OFF
      - platform: state
        entity_id: binary_sensor.nino_school_days
        to: "off"
      # Hassio restart/relaod
      - platform: homeassistant
        event: start
      - platform: event
        event_type: automation_reloaded
    condition:
      - condition: state
        entity_id: binary_sensor.nino_school_days
        state: "off"
    action:
      - service: automation.turn_off
        entity_id: automation.nino_school_day_reminder
      - service: automation.turn_off
        entity_id: automation.nino_school_departure_reminder
      - service: automation.turn_off
        entity_id: automation.nino_school_pickup_reminder

  # School day initial reminder
  #
  - id: "nino_school_day_reminder"
    alias: "Nino School Day Reminder"
    mode: "single"
    initial_state: on
    trigger:
      # # At 7:45am
      # - platform: time
      #   at: "07:45:00"
      # 1 hour and 15 mins before start
      - platform: calendar
        event: start
        entity_id: calendar.ninos_school_day
        offset: -01:15:00
    condition:
      # House is occupied
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"
      # Nino school day boolean is ON
      - condition: state
        entity_id: input_boolean.nino_school_day
        state: "on"
    action:
      # Call the announcement engine
      - service: script.general_announcement
        data:
          speech_message: >-
            {{
              [
                "Hey Nino, it's time to eat breakfast and get ready for school!",
                "Hey thre, it's time to get the kids breakfast ready. It's a school day!",
                "Just at reminder that today's a school day, time for breakfast.",
                "It's a school day. Time for breakfast."
              ] | random
            }}
          media_players: "auto"
          sound: "one-chime"

  # Nino school departure reminder
  #
  - id: "nino_school_departure_reminder"
    alias: "Nino School Departure Reminder"
    mode: "single"
    initial_state: on
    trigger:
      # # At 8:45am
      # - platform: time
      #   at: "08:35:00"
      # 20 mins before start
      - platform: calendar
        event: start
        entity_id: calendar.ninos_school_day
        offset: -00:20:00
    condition:
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"
      # Nino school day boolean is ON
      - condition: state
        entity_id: input_boolean.nino_school_day
        state: "on"
    action:
      # Call the announcement engine
      - service: script.general_announcement
        data:
          speech_message: >-
            {{
              [
                "School starts soon. Time to pack up and head out!",
                "Hey gang, time to start heading over to school.",
                "You gonna learn today. Time for School, Nino.",
                "Pack it up, time to drop Nino at school."
              ] | random
            }}
          media_players: "auto"
          sound: "one-chime"

  # Nino school pickup reminder
  #
  - id: "nino_school_pickup_reminder"
    alias: "Nino School Pickup Reminder"
    mode: "single"
    initial_state: on
    trigger:
      # # At 12:55pm
      # - platform: time
      #   at: "12:55:00"
      # 20 mins before end
      - platform: calendar
        event: end
        entity_id: calendar.ninos_school_day
        offset: -00:20:00
    condition:
      # - condition: state
      #   entity_id: binary_sensor.nino_school_days
      #   state: "on"
      # Nino school day boolean is ON
      - condition: state
        entity_id: input_boolean.nino_school_day
        state: "on"
    action:
      # Call the announcement engine
      - service: script.general_announcement
        data:
          speech_message: >-
            {{
              [
                "Schools out! Time to pick up Nino!",
                "Hey there! It's time to pickup Nino from school.",
                "Dont forget to pick up Nino from school!",
                "Nino's school day is almost over, time to pick him up."
              ] | random
            }}
          media_players: "auto"
          sound: "one-chime"
      # Notify the family via push
      - service: notify.ios_family
        data:
          message: "School will be over soon, it's time to pick up Nino from school."
          title: "Almost time to pickup Nino from school"
