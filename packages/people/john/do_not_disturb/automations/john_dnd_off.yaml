automation:
  - id: "john_dnd_off"
    initial_state: on
    alias: "John DnD Off"
    mode: queued
    trigger:
      # Work call boolean is OFF
      - platform: state
        entity_id: input_boolean.john_work_call
        to: "off"
      # Work call boolean is OFF
      - platform: state
        entity_id: input_boolean.john_work_call
        to: "off"
        for:
          seconds: 60
      # Webcam turned OFF for 30 seconds
      - platform: state
        entity_id: binary_sensor.john_laptop_camera_active
        to: "off"
        for:
          seconds: 30
      # Computer audio OFF for 30 seconds
      - platform: state
        entity_id: binary_sensor.john_laptop_audio_active
        to: "off"
        for:
          seconds: 30
      # Personal time turns ON
      - platform: state
        entity_id: input_boolean.john_personal_time
        to: "on"
    condition:
      # Camera is off
      - condition: state
        entity_id: binary_sensor.john_laptop_camera_active
        state: "off"
      # Computer audio is inactive
      - condition: state
        entity_id: binary_sensor.john_laptop_audio_active
        state: "off"
      # # More complicated ORs
      # - condition: or
      #   conditions:
      #     # Only my personal time is on (which is rare)
      #     - condition: and
      #       conditions:
      #         # Work calendar is OFF
      #         - condition: state
      #           entity_id: input_boolean.john_work_call
      #           state: "off"
      #         # Personal time (GSD, OOO, etc)
      #         - condition: state
      #           entity_id: input_boolean.john_personal_time
      #           state: "on"
      #     # OR I have a calendar event but it's personal time
      #     - condition: and
      #       conditions:
      #         # Work calendar is ON
      #         - condition: state
      #           entity_id: input_boolean.john_work_call
      #           state: "on"
      #         # Personal time (GSD, OOO, etc)
      #         - condition: state
      #           entity_id: input_boolean.john_personal_time
      #           state: "on"
      #     # Camera just turned off and bayesian is OFF
      #     - condition: and
      #       conditions:
      #         # Camera just turned off within 30 seconds
      #         - condition: template
      #           value_template: "{{ (as_timestamp(now()) - as_timestamp(states.binary_sensor.john_laptop_camera_active.last_updated)) | int < 30 }}"
      #         - condition: state
      #           entity_id: binary_sensor.john_do_not_disturb
      #           state: "off"
      #     # OR both calendars are off
      #     - condition: and
      #       conditions:
      #         # Work calendar is OFF
      #         - condition: state
      #           entity_id: input_boolean.john_work_call
      #           state: "off"
      #         # Personal time (GSD, OOO, etc) is OFF
      #         - condition: state
      #           entity_id: input_boolean.john_personal_time
      #           state: "off"
      # DnD is currently ON
      - condition: state
        entity_id: input_boolean.john_dnd
        state: "on"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.john_dnd
