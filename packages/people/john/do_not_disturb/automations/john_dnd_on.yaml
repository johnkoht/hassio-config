automation:
  - id: "john_dnd_on"
    initial_state: on
    alias: "John DnD On"
    mode: queued
    trigger:
      # # In a meeting
      # - platform: state
      #   entity_id: calendar.john_launchpadlab_com
      #   to: "on"
      # Webcam turned on
      - platform: state
        entity_id: binary_sensor.john_laptop_camera_active
        to: "on"
        for:
          seconds: 3
      # On a work call
      - platform: state
        entity_id: input_boolean.john_work_call
        to: "on"
        for:
          seconds: 5
      # Personal time turns OFF
      - platform: state
        entity_id: input_boolean.john_personal_time
        to: "off"
    condition:
      # # Not personal time (GSD, OOO, etc)
      # # AND camera is NOT on
      # - condition: and
      #   conditions:
      #     - condition: state
      #       entity_id: input_boolean.john_personal_time
      #       state: "off"
      #     # Camera is OFF
      #     - condition: state
      #       entity_id: binary_sensor.john_laptop_camera_active
      #       state: "off"

      - condition: or
        conditions:
          # On a work call
          - condition: state
            entity_id: input_boolean.john_work_call
            state: "on"
          # Camera is ON
          - condition: state
            entity_id: binary_sensor.john_laptop_camera_active
            state: "on"

      # It's working hours
      - condition: state
        entity_id: binary_sensor.work_hours
        state: "on"
      # Not already active
      - condition: state
        entity_id: input_boolean.john_dnd
        state: "off"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.john_dnd
      # Notification for logging
      - service: script.general_notification
        data:
          message: "John's DnD mode has been turned on"
          title: "John DnD On!"
          devices: "jk"
          priority: "passive"
          tag: "john-dnd"
