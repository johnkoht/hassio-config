#
# Sound (optional)
# Sound length (optional)
# Speech message (optional)
# Rooms (required)
#

script:
  announcement_engine_new:
    alias: "Announcement Engine New"
    mode: "queued"

    fields:
      #
      #
      # Sound File Details
      #
      sound_file:
        name: Sound File
        description: A URL to a sound file to play
        example: "https://github.com/johnkoht/hassio-config/blob/master/sounds/Notification-sound.mp3?raw=true"
        selector:
          text:
            type: url
      # Sound file length
      sound_length:
        name: Sound Length
        description: The lengths of the sound file in seconds
        example: "2"
        selector:
          number:
            min: 1
            max: 10
            mode: box
      # Sound volume
      sound_volume:
        name: Sound Volume
        description: The volume of the chime sound
        example: "30"
        default: 30
        selector:
          number:
            min: 10
            max: 80
      #
      #
      # Speech Message Details
      #
      speech_message:
        name: Speech Message
        description: The TTS message that will be broadcast
        example: "Hello, world!"
        selector:
          text:
            type: text
      # Speech notification volume
      speech_volume:
        name: Speech Message Volume
        description: The volume of the speech notification
        example: "30"
        default: 30
        selector:
          number:
            min: 10
            max: 80
      #
      #
      # Media Player
      media_players:
        name: Media Players
        description: The media players that should broadcast the announcement
        selector:
          entity:
            include_entities:
              - media_player.sonos_living_room
              - media_player.sonos_office
              - media_player.sonos_family_room
              - media_player.sonos_kitchen
              - media_player.sonos_main_bedroom
              - media_player.sonos_playroom

    sequence:
      # Play a chime
      - service: media_player.play_media
        data:
          # entity_id: media_player.sonos_office
          entity_id: "{{ media_players }}"
          media_content_id: "{{sound_file}}"
          media_content_type: music
          announce: true
          extra:
            volume: "{{sound_volume}}"

      # Wait for the chime to complete
      - alias: "Wait for chime to complete"
        delay: "{{sound_length}}"

      # This engine can be used as simply a chime without a message, so
      # let's make sure there's a message to cotinue, otherwise abort.
      - alias: "Check if there's a TTS message"
        condition: template
        value_template: "{{true if speech_message is defined else false}}"

        # {{ quiet_time_volume if quiet_time_volume is defined and quiet_time_volume != none else 0 }}

      # Play the TTS message
      - service: media_player.play_media
        data:
          entity_id: "{{ media_players }}"
          # media_content_id: "media-source://tts/cloud?message='{{speech_message}}'"
          # media_content_id: "media-source://tts/google_translate?message='{{speech_message}}'"
          media_content_id: "media-source://tts/cloud?message={{speech_message}}&language=en-GB&gender=female"
          # media-source://tts/cloud?message=Hello+John+Koht%2C+you+can+play+any+text+on+any+supported+media+player%21&language=en-GB&gender=female
          media_content_type: music
          announce: true
          extra:
            volume: "{{speech_volume}}"
