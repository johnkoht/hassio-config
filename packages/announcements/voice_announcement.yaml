script:
  voice_announcement:
    alias: Voice Announcement
    mode: "queued"
    # Fields for dynamic attributes
    fields:
      #
      #
      # Sound
      #
      sound:
        name: Sound
        description: The chime sound to play prior to the notification
        example: "arcade"
        default: "default"
        selector:
          select:
            options:
              - default
              - fanfare
              - chirp
              - chime
              - one-chime
              - flute-cell-phone-alert
              - arcade
              - police-whistle
              - arabic-intro
              - school-bell-chime
              - school-bell
              - tarantella
              - success-trumpets
              - games-sfx
              - fox-nfl
      #
      #
      # Speech Message Details
      #
      speech_message:
        name: Speech Message
        description: The TTS message that will be broadcast
        example: "Hello, world!"
        selector:
          text:
            type: text
      #
      #
      # Media Player
      media_players:
        name: Media Players
        description: The media players that should broadcast the announcement
        example: "media_player.sonos_office"
        selector:
          entity:
            include_entities:
              - media_player.sonos_office
              - media_player.sonos_family_room
              - media_player.sonos_kitchen
              - media_player.sonos_main_bedroom
              - media_player.sonos_playroom
              - media_player.sonos_living_room

    # Variables
    variables:
      sound_file: >-
        {% if sound == "default" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/Notification-sound.mp3?raw=true
        {% elif sound == "fanfare" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/medieval-fanfare.mp3?raw=true
        {% elif sound == "chirp" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/twitter-chirp.mp3?raw=true
        {% elif sound == "chime" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/two-tone-chime.mp3?raw=true
        {% elif sound == "one-chime" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/one-tone-chime.mp3?raw=true
        {% elif sound == "flute-cell-phone-alert" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/flute-cell-phone-alert.wav?raw=true
        {% elif sound == "arcade" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/arcade-bonus-alert.wav?raw=true
        {% elif sound == "police-whistle" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/police-short-whistle.mp3?raw=true
        {% elif sound == "arabic-intro" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/arabic_intro.wav?raw=true
        {% elif sound == "school-bell-chime" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/school-bell-chime.wav?raw=true
        {% elif sound == "school-bell" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/school-bell.wav?raw=true
        {% elif sound == "tarantella" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/tarantella.mp3?raw=true
        {% elif sound == "success-trumpets" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/success-trumpets.mp3?raw=true
        {% elif sound == "games-sfx" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/games-sfx.wav?raw=true
        {% elif sound == "fox-nfl" %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/fox-nfl.mp3?raw=true
        {% else %}
          https://github.com/johnkoht/hassio-config/blob/master/sounds/Notification-sound.mp3?raw=true
        {% endif %}
      # Sound file length
      sound_file_length: >-
        {% if sound == "default" %}
          2
        {% elif sound == "fanfare" %}
          8
        {% elif sound == "chirp" %}
          1
        {% elif sound == "chime" %}
          4
        {% elif sound == "one-chime" %}
          5
        {% elif sound == "flute-cell-phone-alert" %}
          3
        {% elif sound == "arcade" %}
          2
        {% elif sound == "police-whistle" %}
          1
        {% elif sound == "arabic-intro" %}
          3
        {% elif sound == "school-bell-chime" %}
          4
        {% elif sound == "school-bell" %}
          4
        {% elif sound == "tarantella" %}
          4
        {% elif sound == "success-trumpets" %}
          4
        {% elif sound == "games-sfx" %}
          1
        {% elif sound == "fox-nfl" %}
          3
        {% else %}
          2
        {% endif %}
      # Sound file volume
      sound_file_volume: >-
        {# Sound volumes vary so this is a way to compensate #}
        {% set vol = 35 %}
        {% if sound == "fox-nfl" %}
          {% set vol = 20 %}
        {% elif sound == "arcade" %}
          {% set vol = 40 %}
        {% elif sound == "fanfare" %}
          {% set vol = 30 %}
        {% elif sound == "tarantella" %}
          {% set vol = 30 %}
        {% elif sound == "tarantella" %}
          {% set vol = 40 %}
        {% endif %}

        {# Adjust the volume based on house mode #}
        {% if states.input_boolean.quiet_mode.state == "on" %}
          {% set vol = vol * 0.5 %}
        {% endif %}

        {{ vol }}
      # Sound file volume
      speech_volume: >-
        {# Sound volumes vary so this is a way to compensate #}
        {% set vol = 40 %}

        {# Adjust the volume based on house mode #}
        {% if states.input_boolean.quiet_mode.state == "on" %}
          {% set vol = vol * 0.60%}
        {% endif %}

        {{ vol }}

    sequence:
      # Somebody is home
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"
      # Speech notifications is enabled
      - condition: state
        entity_id: input_boolean.speech_notifications
        state: "on"
      # It's between 7am and 10pm
      - condition: time
        after: "06:00:00"
        before: "22:00:00"
      # Not bedtime
      - condition: state
        entity_id: input_boolean.bedtime
        state: "off"
      # A room that we can announce to is occupied
      - condition: state
        entity_id: binary_sensor.announceable_rooms_occupied
        state: "on"

      # Call the announcement engine and pass the requested media_players
      # or default to ones in occupied rooms
      - service: script.announcement_engine_new
        data:
          speech_message: "{{ speech_message }}"
          sound_file: "{{sound_file}}"
          sound_length: "{{sound_file_length}}"
          sound_volume: "{{sound_file_volume}}"
          speech_volume: "{{speech_volume}}"
          media_players: >-
            {% if media_players == "all" or media_players == "auto" %}
              {% set media_players = [] %}   
              {# Check which rooms are occupied and if speech notifications are turned #}
              {# on for them. If so, add them to an array of announceable rooms #}
              {% if states.input_boolean.office_occupied.state == "on" and states.input_boolean.office_speech_notifications.state == "on" %}
                {% set media_players = media_players + ["media_player.sonos_office"] %}
              {% endif %}{% if states.input_boolean.family_room_occupied.state == "on" and states.input_boolean.family_room_speech_notifications.state == "on" %}
                {% set media_players = media_players + ["media_player.sonos_family_room"] %}
              {% endif %}{% if states.input_boolean.kitchen_occupied.state == "on" and states.input_boolean.kitchen_speech_notifications.state == "on" %}
                {% set media_players = media_players + ["media_player.sonos_kitchen"] %}
              {% endif %}{% if states.input_boolean.main_bedroom_occupied.state == "on" and states.input_boolean.main_bedroom_speech_notifications.state == "on" %}
                {% set media_players = media_players + ["media_player.sonos_main_bedroom"] %}
              {% endif %}{% if states.input_boolean.playroom_occupied.state == "on" %}
                {% set media_players = media_players + ["media_player.sonos_playroom"] %}
              {% endif %}
            {% endif %}

            {{ media_players}}

      # Save the latest message
      - service: input_text.set_value
        entity_id: input_text.latest_voice_announcement
        data:
          value: "{{ speech_message }}"
