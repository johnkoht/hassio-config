automation:
  # Doorbell Ring
  #
  - id: "doorbell_ring"
    alias: "Doorbell Ring"
    mode: "single"
    trigger:
      # Doorbell is pressed
      - platform: state
        entity_id: binary_sensor.front_door_camera_doorbell
        to: "on"
    action:
      # Sound the doorbell
      - action: script.activate_doorbell_chime
        data: {}

      # Display snapshop on the TV
      - action: script.display_doorbell_snapshot_on_tv
        data: {}

      # Notification for logging
      - action: script.general_notification
        data:
          title: "Front Door"
          message: "Somebody is at the front door!"
          devices: "all"
          priority: "time-sensitive"
          tag: "doorbell-ring"

  # Doorbell Detected Object
  #
  - id: "doorbell_detected_object"
    alias: "Doorbell Detected Object"
    mode: "single"
    initial_state: off
    trigger:
      # Doorbell detects an person
      - platform: state
        entity_id: binary_sensor.front_door_camera_person_detected
        to: "on"
    action:
      # Display snapshop on the TV
      - action: script.display_doorbell_snapshot_on_tv
        data: {}

  # Just a test
  - id: "doorbell_message_test"
    alias: Doorbell Message Test
    mode: single
    initial_state: off
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.front_door_camera_person_detected
          - binary_sensor.backyard_south_person_detected
          - binary_sensor.driveway_front_camera_person_detected
          - binary_sensor.garage_driveway_person_detected
        to: "on"
        variables:
          camera_name: "{{ device_attr(trigger.entity_id, 'name') }}"
          nvr_id: "{{ config_entry_id(trigger.entity_id) }}"
          event_id: "{{ state_attr(trigger.entity_id, 'event_id') }}"
          image_path: /api/unifiprotect/thumbnail/{{ nvr_id }}/{{ event_id }}
    condition: []
    action:
      - action: notify.mobile_app_jk_2
        metadata: {}
        data:
          title: Person Detected
          message: Person Detected on {{camera_name}} {{nvr_id}} {{event_id}}
          data:
            image: "{{image_path}}"
            push:
              sound:
                name: default
                critical: 1
                volume: 1

script:
  # Activate Doorbell Chime
  #
  activate_doorbell_chime:
    alias: "Activate Doorbell Chime"
    mode: "single"
    icon: mdi:doorbell
    sequence:
      # House is occupied
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"
      # Not Bedtime Mode
      - condition: state
        entity_id: input_boolean.bedtime
        state: "off"
      # # Not quiet mode
      # - condition: state
      #   entity_id: input_boolean.quiet_mode
      #   state: "off"
      # Which rooms should play the doorbell
      - alias: "Rooms to sound the doorbell"
        variables:
          sound_file: "/local/sounds/ding-dong.mp3"
          sound_file_length: 5
          sound_file_volume: >-
            {% if states.input_boolean.quiet_mode.state == "on" %}
              25
            {% elif now().strftime('%H')|int > 8 and now().strftime('%H')|int < 20 %}
              55
            {% else %}
              40
            {% endif %}
          media_players: >-
            {% set media_players = [] %}   

            {# Check which rooms are occupied and if speech notifications are turned #}
            {# on for them. If so, add them to an array of announceable rooms #}
            {% if states.input_boolean.office_occupied.state == "on" and states.input_boolean.office_speech_notifications.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_office"] %}
            {% endif %}{% if states.input_boolean.family_room_occupied.state == "on" and states.input_boolean.family_room_speech_notifications.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_family_room"] %}
            {% endif %}{% if states.input_boolean.kitchen_occupied.state == "on" and states.input_boolean.kitchen_speech_notifications.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_kitchen"] %}
            {% endif %}{% if states.input_boolean.playroom_occupied.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_playroom"] %}
            {% endif %}{% if states.input_boolean.dining_room_occupied.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_living_room"] %}
            {% endif %}{% if states.binary_sensor.pool_should_doorbell_chime.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_pool"] %}
            {% endif %}

            {{ media_players}}

      # Call the announcement engine and pass the requested media_players
      # or default to ones in occupied rooms
      - alias: "Repeat the doorbell sounce three times"
        repeat:
          # count: 3
          while:
            # Until the door opens
            - condition: state
              entity_id: binary_sensor.front_door
              state: "off"
            # Only 3 times max
            - condition: template
              value_template: "{{ repeat.index <= 2 }}"
          sequence:
            - action: script.announcement_engine
              data:
                sound_file: "{{sound_file}}"
                sound_length: "{{sound_file_length}}"
                sound_volume: "{{sound_file_volume}}"
                media_players: "{{ media_players}}"
            # Delay 4 seconds
            - delay: 4

  #
  #
  # Display doorbell snapshot on TV
  #
  display_doorbell_snapshot_on_tv:
    mode: single
    alias: Display Doorbell Snapshot on TV
    icon: mdi:doorbell-video
    sequence:
      # The house is occupied
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"

      # Take a snapshot
      - action: camera.snapshot
        data:
          filename: /config/www/images/doorbell_camera_alert.jpg
          entity_id: camera.camera_proxy_camera_front_door_camera_high_resolution_channel

      - action: script.security_detection_display_notification_on_screens
        data:
          title: "Front Door Camera"
          message: "A person has been detected by the front door."
          #image_path: "{{image_path}}"
          image_path: /config/www/images/doorbell_camera_alert.jpg
