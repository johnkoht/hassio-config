# School Day Reminder
#
# If it's a school day, annnounce it to the house so
# the kids know it's time to get ready soon.
#
automation:
  - id: "school_day_reminder"
    alias: "School Day Reminder"
    mode: "single"
    initial_state: on
    trigger:
      # 1 hour and 15 mins before start
      - platform: calendar
        event: start
        entity_id: calendar.ninos_school
        offset: -01:30:00
      # 1 hour and 15 mins before start
      - platform: calendar
        event: start
        entity_id: calendar.gianluca_school
        offset: -01:30:00
    condition:
      # House is occupied
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"
      # Make sure the automation wasn't recently trigger (last 5 mins)
      - condition: template
        value_template: >
          {% if states.automation.school_day_reminder.attributes.last_triggered is not none %}
            {% if as_timestamp(now()) | int - as_timestamp(states.automation.school_day_reminder.attributes.last_triggered) | int > 300 %}
              true 
            {% else %}
              false
            {% endif %}
          {% else %}
            true
          {% endif %}
      # One of the kid's has school
      - condition: or
        conditions:
          # Nino school day boolean is ON
          - condition: state
            entity_id: input_boolean.nino_school_day
            state: "on"
          # OR Gianluca school day boolean is ON
          - condition: state
            entity_id: input_boolean.gianluca_school_day
            state: "on"
      # Not a reminder
      - condition: template
        value_template: "{{ 'reminder' not in (trigger.calendar_event.summary | lower) }}"
    action:
      # Call the announcement engine
      - service: script.voice_announcement
        data:
          media_players: auto
          sound: "school-bell-chime"
          speech_message: >-
            {% set event = trigger.calendar_event.summary | lower %}
            {% set nino_school = states.input_boolean.nino_school_day.state %}
            {% set gianluca_school = states.input_boolean.gianluca_school_day.state %}

            {% if "giggle gang" in event %}
              {% set event_label = "Giggle Gang" %}
            {% elif "little acorns" in event %}
              {% set event_label = "Little Acorns" %}
            {% else %}
              {% set event_label = "school" %}
            {% endif %}

            {% if nino_school == "on" and gianluca_school == "on" %}
              {{
                [
                  "Hey Nino and Gianluca, it's time to eat breakfast and get ready for " ~ event_label,
                  "Hey Nino and Gianluca, it's time to get the kids breakfast ready. Today is " ~ event_label,
                  "Just at reminder that there's " ~ event_label ~ " today, so it's time for breakfast.",
                ] | random
              }}
            {% else %}
              {{
              [
                "Hey Nino, it's time to eat breakfast and get ready for " ~ event_label,
                "Hey fam, it's time to get the kids breakfast ready. Today is " ~ event_label,
                "Just at reminder that there's " ~ event_label ~ " today, so it's time for breakfast.",
              ] | random
            }}
            {% endif %}
