automation:
  - id: "hourly_dong"
    alias: "Hourly Dong"
    mode: "single"
    trigger:
      # At 7am
      - platform: time
        at: "07:00:00"
      # At 8am
      - platform: time
        at: "08:00:00"
      # At 9am
      - platform: time
        at: "09:00:00"
      # At 10am
      - platform: time
        at: "10:00:00"
      # At 11am
      - platform: time
        at: "11:00:00"
      # At 12pm
      - platform: time
        at: "12:00:00"
      # At 3pm
      - platform: time
        at: "15:00:00"
      # At 4pm
      - platform: time
        at: "16:00:00"
      # At 5pm
      - platform: time
        at: "17:00:00"
      # At 6pm
      - platform: time
        at: "18:00:00"
      # At 7pm
      - platform: time
        at: "19:00:00"
    condition:
      # House is occupied
      - condition: state
        entity_id: input_boolean.house_occupied
        state: "on"
      # House is in Auto mode
      - condition: state
        entity_id: input_select.house
        state: "Auto"
      # Speech notifications are enabled
      - condition: state
        entity_id: input_boolean.speech_notifications
        state: "on"
      # A room that we can announce to is occupied
      - condition: state
        entity_id: binary_sensor.announceable_rooms_occupied
        state: "on"
    action:
      # Media players of occupied rooms
      - alias: "Sound File"
        variables:
          media_players: >-
            {% set media_players = [] %}   
            {# Check which rooms are occupied and if speech notifications are turned #}
            {# on for them. If so, add them to an array of announceable rooms #}
            {% if states.input_boolean.office_occupied.state == "on" and states.input_boolean.office_speech_notifications.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_office"] %}
            {% endif %}{% if states.input_boolean.family_room_occupied.state == "on" and states.input_boolean.family_room_speech_notifications.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_family_room"] %}
            {% endif %}{% if states.input_boolean.kitchen_occupied.state == "on" and states.input_boolean.kitchen_speech_notifications.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_kitchen"] %}
            {% endif %}{% if states.input_boolean.playroom_occupied.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_playroom"] %}
            {% endif %}{% if states.input_boolean.dining_room_occupied.state == "on" %}
              {% set media_players = media_players + ["media_player.sonos_living_room"] %}
            {% endif %}
            {{ media_players}}
          primary_player: "{{media_players | first}}"
          sound_file: "/local/sounds/dong.mp3"
          sound_file_length: 4
          sound_file_volume: >-
            {% if states.input_boolean.quiet_mode.state == "on" %}
              25
            {% elif now().strftime('%H')|int > 8 and now().strftime('%H')|int < 20 %}
              50
            {% else %}
              35
            {% endif %}

      # Call the announcement engine and pass the requested media_players
      # or default to ones in occupied rooms
      - service: script.announcement_engine
        data:
          sound_file: "{{sound_file}}"
          sound_length: "{{sound_file_length}}"
          sound_volume: "{{sound_file_volume}}"
          media_players: "{{ media_players}}"
