automation:
  - id: "severe_weather_warning"
    alias: Severe Weather Warning
    initial_state: on
    trigger:
      - platform: state
        entity_id: sensor.pirateweather_alerts
      # - platform: webhook
      #   webhook_id: "tomorrow_io_sw_alert"
      #   allowed_methods:
      #     - POST
      #     - PUT
      #   local_only: false
    condition:
      - "{{ states('sensor.pirateweather_alerts') | int > 0 }}"
      # Alert is severe or extreme
      - condition: template
        value_template: >-
          {{ 
            (state_attr('sensor.pirateweather_alerts', 'severity') | lower) == "severe" or
            (state_attr('sensor.pirateweather_alerts', 'severity') | lower) == "extreme" 
          }}
    action:
      # Announce to the house
      - service: script.voice_announcement
        data:
          speech_message: "{{ state_attr('sensor.pirateweather_alerts', 'title') }}"
          sound: "default"
          media_players: auto

      # Notification for logging
      - service: script.general_notification
        data:
          title: "Weather Alert: {{ state_attr('sensor.pirateweather_alerts', 'title') }}"
          message: >
            {% set desc = state_attr('sensor.pirateweather_alerts', 'title').split("\n")[0] %}
            "NWS: {{ state_attr('sensor.pirateweather_alerts', 'description').split(' - ')[0] }}. {{desc}}"
          devices: "jk"
          priority: "time-sensitive"
          tag: "weather-alert"
