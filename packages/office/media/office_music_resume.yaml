# Office Music Resume
#
# If the office becomes occupied again and
# music was previously playing before it
# became empty, then let's resume
#
automation:
  - id: "office_music_resume"
    initial_state: on
    alias: "Office music resume"
    trigger:
      # Office becomes occupied
      - platform: state
        entity_id: input_boolean.office_occupied
        to: "on"
        for:
          minutes: 3
          seconds: 10
      # Office is no longer in DnD mode for 2 minutes
      - platform: state
        entity_id: input_select.office
        from: "DnD"
        for:
          minutes: 2
      # Laptop becomes active
      - platform: state
        entity_id: binary_sensor.johns_macbook_pro_active
        to: "on"
        for:
          minutes: 2
    condition:
      # Office is occupied
      - condition: state
        entity_id: input_boolean.office_occupied
        state: "on"
      # John is in the office
      - condition: state
        entity_id: sensor.john_room_presence
        state: "office"
      # Sonos is paused, idle, or off
      - condition: state
        entity_id: media_player.sonos_office
        state:
          - "paused"
          - "idle"
          - "off"
      # Sonos Office didnt' recently change state, e.g. I manually paused it
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(states.media_player.sonos_office.last_updated)) | int > 180 }}"
      # Must be in a suitable time window
      - condition: time
        after: "08:01:00"
        before: "22:00:00"
      # Office is not in DnD Mode
      - condition: template
        value_template: "{{ not is_state('input_select.office','DnD') }}"
      # Computer is active
      - condition: state
        entity_id: binary_sensor.johns_macbook_pro_active
        state: "on"
    action:
      - if:
          # If music is paused
          - condition: state
            entity_id: media_player.sonos_office
            state: "paused"
        then:
          # Then play
          - service: media_player.media_play
            entity_id: media_player.sonos_office
        else:
          # Otherwise, play the queue
          - service: sonos.play_queue
            entity_id: media_player.sonos_office

      # Turn off the input_boolean.office_music_playing so
      # we don't always just keep playing music upon occupancy
      - service: input_boolean.turn_off
        entity_id: input_boolean.office_music_playing
