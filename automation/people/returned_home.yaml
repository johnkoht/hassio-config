id: "returned_home"
initial_state: "on"
alias: "Returned home"
trigger:
  # People nearly
  - platform: numeric_state
    entity_id: sensor.home_nearest_distance
    below: .5
  # # People nearly home
  # - platform: numeric_state
  #   entity_id: sensor.home_cristina_distance
  #   below: .75
  # - platform: numeric_state
  #   entity_id: sensor.home_john_distance
  #   below: .75
  # People just got home
  - platform: state
    entity_id:
      - input_select.cristina_status_dropdown
      - input_select.john_status
    to: "Just Arrived"
condition:
  condition: and
  conditions:
    # House has just become occupied
    - condition: template
      value_template: "{{ (as_timestamp(now()) - as_timestamp(states.input_boolean.house_occupied.last_updated)) | int < 300 }}"
    # Somebody is nearly home, or just arrived
    - condition: or
      conditions:
        # Or somebody has just arrived
        - condition: template
          value_template: "{{ is_state('input_select.john_status','Just Arrived') }}"
        - condition: template
          value_template: "{{ is_state('input_select.cristina_status_dropdown','Just Arrived') }}"
action:
  # Notification for logging
  - service: script.general_notification
    data:
      title: "Home Arrival Mode"
      message:
        "I noticed that you're arriving home so I've opened the garage and turned
        on a couple of lights."
      devices: "jk"
      priority: "passive"

  # # Turn the climate back to what it was
  # - service: script.climate_activate
  #   data: {}

  # # Open the middle garage door
  # - service: cover.open_cover
  #   data: {}
  #   target:
  #     entity_id: cover.garage_door_2

  # Set the scene based on time of day
  - alias: "If it's late then turn on a late night scene"
    choose:
      # If late night
      - alias: "Late night"
        conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: sun.sun
                state: "below_horizon"
              # It's after 9pm
              - condition: time
                after: "21:00:00"
        sequence:
          - scene: scene.returned_home_late

    # Otherwise, default scene
    default:
      - scene: scene.returned_home
