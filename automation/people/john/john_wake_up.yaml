# John Wake Up
#
# This automation triggers when the Bayesian sleep
# sensor turns off. This simply changes the states
# for john in bed and awake
#
id: "john_wake_up"
alias: "John wake up"
initial_state: "on"
trigger:
  - platform: state
    entity_id: binary_sensor.john_in_bed
    to: "off"
  - platform: state
    entity_id: binary_sensor.john_in_bed
    to: "off"
    for:
      minutes: 3
  # Door is open
  - platform: state
    entity_id: binary_sensor.main_bedroom_door_sensor_status
    to: "on"
condition:
  # # John is not sleeping
  # - condition: state
  #   entity_id: binary_sensor.john_in_bed
  #   state: "off"
  - condition: or
    conditions:
      # John is not sleeping for 3 mins
      - condition: state
        entity_id: binary_sensor.john_in_bed
        state: "off"
        for:
          minutes: 3
      # OR door was just opened
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(states.binary_sensor.main_bedroom_door_sensor_status.last_changed)) | int > 90 }}"
  # John is home
  - condition: state
    entity_id: input_boolean.john_home
    state: "on"
  # John is in bed
  - condition: state
    entity_id: input_boolean.john_is_in_bed
    state: "on"
  # It's within the timeframe of wake up
  - condition: time
    after: "05:30:00"
    before: "21:00:00"
action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.john_is_in_bed
  - service: input_boolean.turn_on
    entity_id: input_boolean.john_is_awake
